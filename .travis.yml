branches:
  only:
    - master
# sudo: required
# before_install:
# - chmod +x ./build-script/gcloud-sdk-install.sh
# install:
# - "./build-script/gcloud-sdk-install.sh"
# script:
# - "./build-script/deploy-terraform.sh"

cache:
  directories:
  # We cache the SDK so we don't have to download it again on subsequent builds.
  - $HOME/google-cloud-sdk
services:
# Include the docker service so you can roll your own images.
# You can remove this if you already have images somewhere else.
- docker
env:
  global:
  # Do not prompt for user input when using any SDK methods.
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1
  - PATH=$PATH:$HOME/google-cloud-sdk/bin
  - PROJECT_ID="shaogang-1bo2-project-0"
  - ZONE="us-west1-b"
  - IMAGE_NAME=demo:latest
  - FULL_IMAGE_NAME=gcr.io/$PROJECT_ID/$IMAGE_NAME
  - GOOGLE_APPLICATION_CREDENTIALS="${PWD}/client-secret.json"
  - CLUSTER_NAME=softserve-demo
before_install:
- openssl aes-256-cbk -K $encrypted_142535234c_key -iv $encrypted_12323423423440c_in -in client-secret.json.enc -out client-secret.json -d
- if [ ! -d $HOME/google-cloud-sdk/bin ]; then rm -rf $HOME/google-cloud-sdk; curl https://sdk.cloud.google.com | bash > /dev/null; fi
# This line is critical. We setup the SDK to take precedence in our
# environment over the old SDK that is already on the machine.
- source $HOME/google-cloud-sdk/path.bash.inc
- gcloud components install kubectl
- gcloud version
- ./gcloud-sdk-configure.sh
- kubectl version
install: true
script: true
