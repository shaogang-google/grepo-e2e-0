branches:
  only:
    - /.*/

cache:
  directories:
  # We cache the SDK so we don't have to download it again on subsequent builds.
  - $HOME/google-cloud-sdk
env:
  global:
  # Do not prompt for user input when using any SDK methods.
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1

before_install:
# Decrypt the credential file.
- openssl aes-256-cbc -K $encrypted_293563e5d432_key -iv $encrypted_293563e5d432_iv -in client-secret.json.enc -out ./client-secret.json -d
# Install gcloud sdk.
- if [ ! -d $HOME/google-cloud-sdk/bin ]; then rm -rf $HOME/google-cloud-sdk; curl https://sdk.cloud.google.com | bash > /dev/null; fi
# This line is critical. We setup the SDK to take precedence in our
# environment over the old SDK that is already on the machine.
- source $HOME/google-cloud-sdk/path.bash.inc
- gcloud version
- gcloud components update kubectl
- gcloud auth activate-service-account --key-file ./client-secret.json
- gcloud config set project shaogang-1bo2-project-0
- gcloud config set compute/zone us-west1-b
install: true
script:
- gcloud container clusters get-credentials gcp-policy-management
# Directly use binary just for demo. Can use docker if needed.
# - ./bin/nomos vet
